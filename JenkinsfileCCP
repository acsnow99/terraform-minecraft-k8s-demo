pipeline {
    agent any
    environment {
        HARBOR_ADDRESS = "172.21.6.192"
        RELEASE = "1.14.4"
    SERVERTYPE = "VANILLA"
    MODPACK = ""
    DOCKER_REPO="${HARBOR_ADDRESS}/itzg/minecraft-server"
    }
    stages {
        stage('Cleanup') {
            steps {
        sh "kubectl --kubeconfig ~/.kube/kubeconfig-harbor-tenant.yaml delete mc-server-pod-java || true"
            }
        }
        stage('Build') {
            steps {
        echo 'Build stuff'
        sh "cat resources/mc-pod-jenkins.yaml > resources/deployment.yaml"
        //| sed "s/{{BUILD_NUMBER}}/$BUILD_NUMBER/g"
            }
        }
        stage('Test') {
            steps {
                echo 'Run your test scripts here.'
            }
        }
        stage('Deploy') {
            steps {
        kubernetesDeploy(
            kubeconfigId: 'harbor-tenant',
            configs: 'resources/deployment.yaml',
            dockerCredentials: [[credentialsId: 'harboruser',
            url: 'http://${HARBOR_ADDRESS}']],
            secretName: 'harbor',
            secretNamespace: 'webserver'
        )
        sh 'kubectl get pods'
            }
        }
        stage('Server Setup') {
            steps {
        sh "sleep 45"
        sh "kubectl --kubeconfig ~/.kube/kubeconfig-harbor-tenant.yaml cp ./resources/server.properties.provisioned mc-server-pod-java:/data/server.properties"
        sh "kubectl --kubeconfig ~/.kube/kubeconfig-harbor-tenant.yaml exec mc-server-pod-java chmod 777 server.properties"
        sh "kubectl --kubeconfig ~/.kube/kubeconfig-harbor-tenant.yaml delete pod mc-server-pod-java"
        sh "kubectl --kubeconfig ~/.kube/kubeconfig-harbor-tenant.yaml apply -f ./resources/mc-pod-provisioned.yaml"
            }
        }
    }
}